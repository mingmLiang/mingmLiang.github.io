<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[实战]]></title>
      <url>%2F2017%2F03%2F11%2F%E5%AE%9E%E6%88%98%2F</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[前端工程师必备的PS技能 基础篇]]></title>
      <url>%2F2017%2F03%2F11%2F%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BF%85%E5%A4%87%E7%9A%84PS%E6%8A%80%E8%83%BD%E2%80%94%E2%80%94%E5%88%87%E5%9B%BE%E7%AF%87%2F</url>
      <content type="text"><![CDATA[界面设置新建文件设置(1)ctrl+n 新建文件(2)设置文件参数如下（根据当前流行网页的参数设置）预设：自定宽度：1920 像素高度：1080 像素分辨：72 像素/英寸颜色模式：RGB颜色 8位背景内容：透明(3)选择确定，新建文件；也可以选择存储为预设，方便以后使用时，不用再设置参数。 移动工具设置(1)选中移动工具(2)在左上角勾选自动选择，并且改它的值为图层，而不是组。 视图设置(1)视图-显示-勾选中智能参考线(2)视图-标尺(ctrl+r)(3)点击窗口，关闭不需要的面板。或者直接点击面板关闭。并且加入没有的面板。最终保留信息、字符、历史记录、图层面板。(4)选中信息面板，点击右上角小图标。修改面板选项为如下参数： 第一颜色信息模式：RGB颜色， 第二颜色信息模式：RGB颜色， 鼠标坐标标尺单位(R):像素， 状态信息：选中文档大小、文档尺寸。(5)编辑-首选项-单位与标尺 把单位中的区域参数设为： 标尺(R)：像素； 文字(Y):像素；(6)ctrrl+点击图层面板中的图层可以选择该图层，查看图层选区大小 保存工作区窗口-工作区-新建工作区 Photoshop传统切图方式方式一(1)选中切片工具，建立切片(2)文件-存储为web和设备所用格式 方式二(1)将各个部分裁剪(2)添加参考线(3)在选中选中切片工具的情况下，点击上方的基于参考线切片。(4)文件-存储为web和设备所用格式 Photoshop精准切图什么是Photoshop精准切图(1)利用photoShop脚本进行一种更快捷精准的切图方法。(2)自动化切图(3)计算机自动计算，尺度更精准。 Photoshop精准切图具体步骤(1)文件-脚本-将图层导出到文件(2)注意：选中文件类型：PNG-24透明选区、交错、裁剪图层、包含ICC配置文件文件名前缀：images文件夹：images 切图（单个）(1)编辑-首选项-增效工具-勾选启用生成器(2)重新启动photoshop(3)勾选文件-生成-图像资源(4)注意在原png存储的文件夹中多了-assets文件夹(5)重命名目标图层的文件夹如 logo=&gt;logo.png(6)在刚才的-assets文件夹会有对应的新生成图片 如若想生成原来2倍大小的则在(5)中重命名为200% button @2x.jpg 80%的品质button8.jpg最佳为10 注意：可以用同样的方法导出svg、web文件 注意：也可以用抽出资源的方法，导出svg文件 文件-抽出资源 复制css(1)图层-复制css（但是外部引用的不能复制）(2)复制之后在编辑器粘贴即可 图层管理(1)图层类型：穿透/颜色/名称…(2)可以直接收缩 压缩图像方法一(1)文件-存储-TIFF格式(2)TIFF面板的参数设置为： 图像压缩:LZW jpg(有损压缩) 方法二(1)文件-存储为web所用格式]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使Photoshop专业切图步骤]]></title>
      <url>%2F2017%2F03%2F11%2F%E4%BD%BF%E7%94%A8Photoshop%E4%B8%93%E4%B8%9A%E5%88%87%E5%9B%BE%E6%AD%A5%E9%AA%A4%2F</url>
      <content type="text"><![CDATA[1.用Photoshop打开psd文件2.右键选中需要合并的图层3.ctrl+e 合并图层4.ctrl+点击图层列表中的图片 选中选区5.ctrl+c 复制选区6.ctrl+n 新建psd项目 （注意：图层的大小会根据已复制的内容的大小调整）7.ctrl+v 粘贴选区8.删除背景9.文件-导出-存储为web所用格式 或者按快捷键（alt + shift + ctrl + s）10.预设：png-24 勾选透明度 点击存储]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[zepto（简化的javaScript库）]]></title>
      <url>%2F2017%2F03%2F11%2Fzepto%2F</url>
      <content type="text"><![CDATA[注意：内容不完整，请留意官方网站。 zepto的API是大量参考jquery的API zepto的优势无缝接入和改造现有项目更好的执行效率比较轻量 ##zepto中文网 1使用上zepto和jQuery没有太大区别 下载方式官网上复制粘贴在文件夹下，进入命令行（按住shif+右键），执行以下命令1npm install zepto zepto中的$选择器释放会 $ 标识符的控制用以下语句，这样其他脚本就可以使用它了。1Zepto.noConflict () zepto中的$选择器1$(selector,context) zepto core（API）123456$(selector, [context]) ⇒ collection$(&lt;Zepto collection&gt;) ⇒ same collection$(&lt;DOM nodes&gt;) ⇒ collection$(htmlString) ⇒ collection$(htmlString, attributes) ⇒ collection v1.0+Zepto(function($)&#123; ... &#125;) 12345678910111.$(&apos;#sidebar&apos;).toString()返回一个数组：&quot;[object Array]&quot;2.$(&apos;#sidebar&apos;,&apos;body&apos;)在body中找#sidebar3.可以直接传zepto的结果，返回的还是zepto4.也可以直接传DOM节点,如var dom=document.getElementById(&apos;sidebar&apos;);dom$(dom)5.传入htmlString,会创建新的html元素$(&apos;&lt;div&gt;&apos;) zepto事件自定义事件$.Event12345671.定义名为abc的自定义事件$(document).bind(&apos;abc&apos;,function()&#123; console.log(1);&#125;);2.触发名为abc的自定义事件$(document).trigger(&apos;abc&apos;); Touch events12需要引入touch插件具体细节查看官网 zepto ajax可以实现跨域请求（自带） zepto插件12345678910111.deferred 设计模式（可以替代ajax的callback）2.扩展插件;(function($)&#123; $.extend($.fn, &#123; foo: function()&#123; // `this` refers to the current Zepto collection. // When possible, return the Zepto collection to allow chaining. return this.html(&apos;bar&apos;) &#125; &#125;)&#125;)(Zepto)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[php基础篇]]></title>
      <url>%2F2017%2F03%2F11%2Fphp%2F</url>
      <content type="text"><![CDATA[php定界符:可以写在页面的任意位置123456789101112131415161718191.标准定界符。 xml风格 常用&lt;?phpphp代码?&gt;2.短标记&lt;?php代码?&gt; 3.asp风格&lt;%php代码%&gt;4.script风格&lt;script language=&apos;php&apos;&gt;php代码&lt;/script&gt; 注意：php代码严格区分大小写php代码每行都要以“;”结尾 php注释：写在php定界符之内121.单行定界符用//2.多行定界符 /* */ php变量12341.定义变量$变量名称=值；2.变量名称第一位必须是字母3.echo打印 预定义变量123456789101.传值接收数据的变量$_GET 数据量小，不安全 经由http get方式传递数据$_POST 数据量大，安全 经由http post方式传递数据$_REQUEST $_GET+$_POST 效率低 get、post方式$_FILES 上传变量 经由http post方式来上传文件传递数据2.会话：临时数据存储空间$_SESSION 在服务器短保存数据$_COOKIE 在客户器短保存数据$_SERVER 系统的环境信息 php中数据类型1234567891011121314151617181920212223一共八种1.基础数据类型（标量类型）字符串 string整型 integer浮点型 float布尔型 boolean注意：单双引号的区别：双引号的代码会执行，单引号的代码不会执行2.复合类型array 数组object 对象特殊类型resource 资源null 空值转义字符：\// 释放变量unset ($m);//返回变量的数据类型var_dump(); 数据类型转换12php弱变量类型（想要转换为的类型）$变量名 运算符123456789101112131415161718191.字符串拼接符 .&lt;?php$str=&quot;abc&quot;;$str1=&quot;efg&quot;;$str2=$str.$str1;echo $str2;2. + - * / % = += -= /= %= .= str=str.str2; str.=str2;3. -- ++4. &gt; &lt; &gt;= &lt;= == ===(全等) !==(全不等)5. &amp;&amp; || ！ !正整数 ！负整数 ===》false ！“0” ====》 true ！“0.0” ====》 false6.三目运算符 a&gt;b？ a：b;7.位运算符 &amp; | &lt;&lt; &gt;&gt; 流程控制121. if2. switch 数组12345678910111213141516171819202122232425262728293031323334353637381.索引數組 （1）直接定义 $arr[0]=123; $arr[1]=&quot;zhangsan&quot;; $arr[2]=&quot;china&quot;; print_r($arr); //打印数组 echo count($arr);//打印数组元素个数 （2）用arry关键字定义 $arr =arry(123,&quot;zhangsan&quot;,&quot;china&quot;);2.关联数组：下标为字符串的数组 （1）直接定义 $arr[&quot;one&quot;]=&quot;中国&quot;; $arr[&quot;demo&quot;]=&quot;美国&quot;; $arr[&quot;test&quot;]=&quot;法国&quot;; echo $arr[&quot;test&quot;]; print_r($arr); //打印数组 （2）用arry关键字定义 $arr=arry(&quot;one&quot;=&gt;&quot;中国&quot;;&quot;demo&quot;=&gt;&quot;美国&quot;;&quot;test&quot;=&gt;&quot;法国&quot;); 3.二维数组 $arr=arry( arry(&quot;zhangsan&quot;,18,&quot;man&quot;); arry(&quot;lisi&quot;,15,&quot;man&quot;); arry(&quot;zhaoli&quot;,16,&quot;sex&quot;=&gt;&quot;woman&quot;); ); $arry[2][0]; $arry[3][&quot;sex&quot;];4.遍历数组 foreach $arr[0]=123; $arr[1]=&quot;zhangsan&quot;; $arr[2]=&quot;china&quot;; foreach($arr as $key=&gt;$val) &#123; echo $key.&quot;----&gt;&quot;.$val.&quot;&lt;br/&gt;&quot;; &#125; 常量1234567891011121314151.系统常量 PHP_OS 操作系统 PHP_VERSION php版本 PHP_SAPI php运行方式 2.自定义常量 define(&quot;NAME&quot;,&quot;val&quot;); 常量名称全大写 3.魔术常量:__FILE__; 当前页面的物理路径__LINE__; 当前的行号__FUNCTION__; 当前的函数名__ClASS__; 当前的类名__METHOD__; 当前的方法名 文件上传123456789图片上传为一个数组Array ( [name] =&gt; 360wallpaper.jpg 文件名称[type] =&gt; image/jpeg 文件的mime类型[tmp_name] =&gt; C:\Windows\Temp\phpB495.tmp 文件的临时位置[error] =&gt; 0 错误信息 也有其他类型 2,3,4,6,7[size] =&gt; 322637 ) 1 文件的大小 move_uploaded_file($uImage[&quot;tmp_name&quot;], &quot;upload/&quot;.$uImage[&quot;name&quot;]);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[微金所项目实战]]></title>
      <url>%2F2017%2F03%2F11%2Fnote%E9%87%8D%E7%82%B9%2F</url>
      <content type="text"><![CDATA[搭建Bootstrap页面骨架及项目目录结构12345678├─ /weijinsuo/ ··················· 项目所在目录└─┬─ /css/ ······················· 我们自己的CSS文件 ├─ /font/ ······················ 使用到的字体文件 ├─ /img/ ······················· 使用到的图片文件 ├─ /js/ ························ 自己写的JS脚步 ├─ /lib/ ······················· 从第三方下载回来的库（只用不改） ├─ /favicon.ico ················ 站点图标 └─ /index.html ················· 入口文件 约定编码规范HTML约定 在head中引入必要的CSS文件，优先引用第三方的CSS，方便我们自己的样式覆盖 在body末尾引入必要的JS文件，优先引用第三方的JS，注意JS文件之间的依赖关系，比如bootstrap.js依赖jQuery，那就应该先引用jquery.js 然后引用bootstrap.js CSS约定 除了公共级别样式，其余样式全部由 模块前缀 尽量使用 直接子代选择器， 少用间接子代 避免错杀 HTML5文档结构12345678910&lt;!DOCTYPE html&gt;&lt;html lang="zh-CN"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;页面标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; Viewport设置1&lt;meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0"&gt; html中插入视口设置，可以通过emmet meta:vp 插入 浏览器兼容模式1&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt; html中插入兼容模式设置，可以通过emmet meta:compat 插入 favicon（站点图标）1&lt;link rel="shortcut icon" type="image/x-icon" href="favicon.ico"&gt; html中插入图标链接，可以通过emmet link:favicon 插入 引入相应的第三方文件123456&lt;link rel="stylesheet" href="bootstrap.css"&gt;&lt;link rel="stylesheet" href="my.css"&gt;...&lt;script src="jquery.js"&gt;&lt;/script&gt;&lt;script src="bootstrap.js"&gt;&lt;/script&gt;&lt;script src="my.js"&gt;&lt;/script&gt; 在我们默认的样式表中将默认字体设置为：12345678body&#123; font-family: "Helvetica Neue", Helvetica, Microsoft Yahei, Hiragino Sans GB, WenQuanYi Micro Hei, sans-serif;&#125; 完成页面空结构 先划分好页面中的大容器，然后在具体看每一个容器中单独的情况 1234567891011121314151617181920212223242526&lt;body&gt; &lt;!-- 头部区域 --&gt; &lt;header&gt;&lt;/header&gt; &lt;!-- /头部区域 --&gt; &lt;!-- 广告轮播 --&gt; &lt;section&gt;&lt;/section&gt; &lt;!-- /广告轮播 --&gt; &lt;!-- 特色介绍 --&gt; &lt;section&gt;&lt;/section&gt; &lt;!-- /特色介绍 --&gt; &lt;!-- 立即预约 --&gt; &lt;section&gt;&lt;/section&gt; &lt;!-- /立即预约 --&gt; &lt;!-- 产品推荐 --&gt; &lt;section&gt;&lt;/section&gt; &lt;!-- /产品推荐 --&gt; &lt;!-- 新闻列表 --&gt; &lt;section&gt;&lt;/section&gt; &lt;!-- /新闻列表 --&gt; &lt;!-- 合作伙伴 --&gt; &lt;section&gt;&lt;/section&gt; &lt;!-- /合作伙伴 --&gt; &lt;!-- 脚注区域 --&gt; &lt;footer&gt;&lt;/footer&gt; &lt;!-- /脚注区域 --&gt;&lt;/body&gt; 构建顶部通栏123&lt;header&gt; &lt;div class="topbar"&gt;&lt;/div&gt;&lt;/header&gt; container类 用于定义一个固定宽度且居中的版心 12345678&lt;div class="topbar"&gt; &lt;div class="container"&gt; &lt;!-- 此处的代码会显示在一个固定宽度且居中的容器中 该容器的宽度会跟随屏幕的变化而变化 --&gt; &lt;/div&gt;&lt;/div&gt; 栅格系统 Bootstrap中定义了一套响应式的网格系统， 其使用方式就是将一个容器划分成12列， 然后通过col-xx-xx的类名控制每一列的占比 row类 因为每一个列默认有一个15px的左右外边距 row类的一个作用就是通过左右-15px屏蔽掉这个边距 123&lt;div class="container"&gt; &lt;div class="row"&gt;&lt;/div&gt;&lt;/div&gt; col-\-*类 col-xs-[列数]：在超小屏幕下展示几份 col-sm-[列数]：在小屏幕下展示几份 col-md-[列数]：在中等屏幕下展示几份 col-lg-[列数]：在大屏幕下展示几份 xs : 超小屏幕 手机 (&lt;768px) sm : 小屏幕 平板 (≥768px) md : 中等屏幕 桌面显示器 (≥992px) lg : 大屏幕 大桌面显示器 (≥1200px) 123456&lt;div class="row"&gt; &lt;div class="col-md-2 text-center"&gt;&lt;/div&gt; &lt;div class="col-md-5 text-center"&gt;&lt;/div&gt; &lt;div class="col-md-2 text-center"&gt;&lt;/div&gt; &lt;div class="col-md-3 text-center"&gt;&lt;/div&gt;&lt;/div&gt; 此处顶部通栏已经被划分成四列text-center的作用就是让内部内容居中显示 字体图标####字体图标的引入12345678910111213141516@font-face &#123; font-family: 'itcast'; src: url('../font/MiFie-Web-Font.eot') format('embedded-opentype'), url('../font/MiFie-Web-Font.svg') format('svg'), url('../font/MiFie-Web-Font.ttf') format('truetype'), url('../font/MiFie-Web-Font.woff') format('woff');&#125;[class^="icon-"],[class*=" icon-"] &#123; /*注意上面选择器中间的空格*/ /*我们使用的名为itcast的字体就是上面的@font-face的方式声明的*/ font-family: itcast; font-style: normal;&#125;.icon-mobilephone::before&#123; content: '\e908';&#125; ####字体图标的使用123456789&lt;div class="col-md-2 text-center"&gt; &lt;a class="mobile-link" href="#"&gt; &lt;i class="icon-mobile"&gt;&lt;/i&gt; &lt;span&gt;手机微金所&lt;/span&gt; &lt;!-- 这里使用的是bootstrap中的字体图标 --&gt; &lt;i class="glyphicon glyphicon-chevron-down"&gt;&lt;/i&gt; &lt;img src="..." alt=""&gt; &lt;/a&gt;&lt;/div&gt; 字体文件格式 eot : embedded-opentype svg : svg ttf : truetype woff : woff hover图片展示123.mobile-link:hover &gt; img &#123; display: block;&#125; 按钮样式生成 http://blog.koalite.com/bbg/ 可以通过界面生成一个新的按钮样式 123456789101112131415161718192021222324252627282930313233343536373839404142434445.btn-itcast &#123; color: #ffffff; background-color: #E92322; border-color: #DB3B43;&#125;.btn-itcast:hover,.btn-itcast:focus,.btn-itcast:active,.btn-itcast.active,.open .dropdown-toggle.btn-itcast &#123; color: #ffffff; background-color: #E92322; border-color: #DB3B43;&#125;.btn-itcast:active,.btn-itcast.active,.open .dropdown-toggle.btn-itcast &#123; background-image: none;&#125;.btn-itcast.disabled,.btn-itcast[disabled],fieldset[disabled] .btn-itcast,.btn-itcast.disabled:hover,.btn-itcast[disabled]:hover,fieldset[disabled] .btn-itcast:hover,.btn-itcast.disabled:focus,.btn-itcast[disabled]:focus,fieldset[disabled] .btn-itcast:focus,.btn-itcast.disabled:active,.btn-itcast[disabled]:active,fieldset[disabled] .btn-itcast:active,.btn-itcast.disabled.active,.btn-itcast[disabled].active,fieldset[disabled] .btn-itcast.active &#123; background-color: #E92322; border-color: #DB3B43;&#125;.btn-itcast .badge &#123; color: #E92322; background-color: #ffffff;&#125; 小屏幕隐藏1&lt;div class="topbar hidden-xs hidden-sm"&gt;&lt;/div&gt; 或者 1&lt;div class="topbar visible-md visible-lg"&gt;&lt;/div&gt; hidden-xx : 在某种屏幕下隐藏 visible-xx : 在某种屏幕尺寸下显示 导航通栏 在使用了boostrap过后，大多数界面元素都是通过bootstrap提供好的界面组件修改得来 1234567891011121314151617181920212223242526272829&lt;nav class="navbar navbar-itcast navbar-static-top"&gt; &lt;div class="container"&gt; &lt;div class="navbar-header"&gt; &lt;button id="btn" type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#nav_list" aria-expanded="false"&gt; &lt;span class="sr-only"&gt;切换菜单&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class="navbar-brand" href="#"&gt; &lt;i class="icon-icon"&gt;&lt;/i&gt; &lt;i class="icon-logo"&gt;&lt;/i&gt; &lt;/a&gt; &lt;/div&gt; &lt;div id="nav_list" class="collapse navbar-collapse"&gt; &lt;ul class="nav navbar-nav"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;我要投资&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;我要借款&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;平台介绍&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;新手专区&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;最新动态&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;微论坛&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;ul class="nav navbar-nav navbar-right hidden-sm"&gt; &lt;li&gt;&lt;a href="#"&gt;个人中心&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/nav&gt; Bootstrap扩展 通过bootstrap文档对导航条样式的设置发现，其实本身是有一个类似于主题的概念 navbar-default：默认的外观 navbar-inverse：暗色背景的样式 所以我们希望可以通过自定义一套完整的风格： navbar-itcast 1234.navbar-itcast&#123; ...&#125;...具体代码参考navbar-default实现即可 品牌logo 任然使用字体图标 菜单行高调整 默认样式中菜单的行高为20px，我们可以调整为自己想要的高度 一般都是通过自己的样式去覆盖 轮播图Bootstrap JS插件使用 对于Bootstrap的JS插件，我们只需要将文档实例中的代码粘到我们自己的代码中让后作出相应的样式调整 Bootstrap中轮播图插件叫作Carousel基本的轮播图实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!-- 以下容器就是整个轮播图组件的整体， 注意该盒子必须加上 class="carousel slide" data-ride="carousel" 表示当前是一个轮播图 bootstrap.js会自动为当前元素添加图片轮播的特效--&gt;&lt;div id="轮播图的ID" class="carousel slide" data-ride="carousel"&gt; &lt;!-- ol标签是图片轮播的控制点 --&gt; &lt;ol class="carousel-indicators"&gt; &lt;!-- 每一个li就是一个单独的控制点 data-target属性就是指定当前控制点控制的是哪一个轮播图，其目的是如果界面上有多个轮播图，便于区分到底控制哪一个 data-slide-to属性是指当前的li元素绑定的是第几个轮播项 注意，默认必须给其中某个li加上active，展示的时候就是焦点项目 --&gt; &lt;li data-target="#轮播图的ID" data-slide-to="0" class="active"&gt;&lt;/li&gt; &lt;li data-target="#轮播图的ID" data-slide-to="1"&gt;&lt;/li&gt; &lt;!-- ...更多的 --&gt; &lt;/ol&gt; &lt;!-- .carousel-inner是所有轮播项的容器盒子， 注意role="listbox"代表当前div是一个列表盒子，作用就是给当前div添加一个语义 --&gt; &lt;div class="carousel-inner" role="listbox"&gt; &lt;!-- 每一个.item就是单个轮播项目，注意默认要给第一个轮播项目加上active，表示为焦点 --&gt; &lt;div class="item active"&gt; &lt;!-- 轮播项目中展示的图片 --&gt; &lt;img src="example.jpg" alt="示例图片"&gt; &lt;div class="carousel-caption"&gt; &lt;!-- 标题或说明性文字，如果不需要，直接删除当前div.carousel-caption --&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="item"&gt; &lt;!-- ... --&gt; &lt;/div&gt; &lt;!-- ... --&gt; &lt;/div&gt; &lt;!-- 图片轮播上左右两个控制按钮，分别点击可以滚动到上一张和下一张 --&gt; &lt;!-- 此处需要注意的是 该a链接的href属性必须指向需要控制的轮播图ID --&gt; &lt;!-- 另外a链接中的data-slide="prev"代表点击该链接会滚到上一张，如果设置为next的话则相反 --&gt; &lt;a class="left carousel-control" href="#轮播图的ID" role="button" data-slide="prev"&gt; &lt;span class="glyphicon glyphicon-chevron-left" aria-hidden="true"&gt;&lt;/span&gt; &lt;span class="sr-only"&gt;上一张&lt;/span&gt; &lt;/a&gt; &lt;a class="right carousel-control" href="#轮播图的ID" role="button" data-slide="next"&gt; &lt;span class="glyphicon glyphicon-chevron-right" aria-hidden="true"&gt;&lt;/span&gt; &lt;span class="sr-only"&gt;下一张&lt;/span&gt; &lt;/a&gt;&lt;/div&gt; 由于轮播图片超宽造成的影响 美工为了在不同屏幕下更好地展示将图片两边做的非常宽，但是我们大多数情况的页面宽度都无法满足这样的图片宽度 而且Bootstrap的样式中默认将图片的max-width设置为100%； 造成界面图片缩放 想在一个较小屏幕下展示一个超宽的图片，并让图片居中显示 两种办法： 换用背景图的方式，background-position: center center; 使img元素绝对定位，left:50%，margin-left: -width/2 background使用 将容器的高度固定（410px） 将轮播图改为背景显示 由于可能图片的高度不一定是410px 所以需要设置css3中的background-size background-size length 如 background-size: 100px 100px，将背景图固定到多大尺寸 percentage 如 background-size: 90% 90%，以百分比的形式设置背景大小 cover 1.背景图片等比例缩放 2.让背景图相对较小边放大到目标容器大小结束 如：一张100*200的背景图放到一个300*400的盒子中，最终背景图片的大小是300*600 因为背景图的较小边为100，将100放大到目标容器300的宽度，放大了3倍，最终结果300*600 contain 1.背景图片等比例缩放 2.让背景图相对较大边放大到目标容器大小结束 如：一张100*200的背景图放到一个300*400的盒子中，最终背景图片的大小是200*400 因为背景图的较大边为200，将200放大到目标容器400的高度，放大了2倍，最终结果200*400 democover contain 图片响应式 目的 各种终端都需要正常显示图片 移动端应该使用更小（体积）的图片 实现方式 将元素中直接设置的图片背景删除，换成两个data-属性（如：data-img-sm=”小图路径”，data-img-lg=”大图路径”） 通过JS的方式获取屏幕的宽度； 判断屏幕宽度是否小于一定的值（如：768） 根据判断情况决定使用具体的大图还是小图 12345678910111213141516// 获取屏幕宽度var windowWidth = $(window).width();// 判断屏幕属于大还是小var isSmallScreen = windowWidth &lt; 768;// 根据大小为界面上的每一张轮播图设置背景// $('#main_ad &gt; .carousel-inner &gt; .item') // 获取到的是一个DOM数组（多个元素）$('#main_ad &gt; .carousel-inner &gt; .item').each(function(i, item) &#123; // 因为拿到是DOM对象 需要转换 var $item = $(item); // var imgSrc = $item.data(isSmallScreen ? 'image-xs' : 'image-lg'); var imgSrc = isSmallScreen ? $item.data('image-xs') : $item.data('image-lg'); // 设置背景图片 $item.css('backgroundImage', 'url("' + imgSrc + '")');&#125;); window resize事件 由于上一步我们实现的过程是指在页面加载完成判断一次， 当用户手动调整页面宽度过后没有及时发生变化， 所以我们可以通过window的resize事件中重新完成以上操作来解决这个问题 1234function 窗口变化后执行的函数名()&#123; // 具体的操作&#125;$(window).on('resize', 窗口变化后执行的函数名); 这个事件只会在窗口尺寸发生变化后执行，但是我们需要一开始时执行一次 12...$(window).on('resize', 窗口变化后执行的函数名).trigger('resize'); 小图片不需要使用背景的方式 小图如果还是使用背景的方式，当屏幕特别小时，效果很差 所以当使用小图时，改用img的方式 123456// 因为我们需要小图时 尺寸等比例变化，所以小图时我们使用img方式if (isSmallScreen) &#123; $item.html('&lt;img src="' + imgSrc + '" alt="" /&gt;');&#125; else &#123; $item.empty();&#125; 按照目前的情况，如果是小图展示则不需要给容器加上410px的固定高度 所以我们可以通过CSS媒体查询的方式解决 12345678910111213#main_ad &gt; .carousel-inner &gt; .item &#123; background-repeat: no-repeat; background-position: center center; background-size: cover;&#125;@media (min-width: 768px) &#123; #main_ad &gt; .carousel-inner &gt; .item &#123; height: 410px; &#125;&#125;#main_ad &gt; .carousel-inner &gt; .item &gt; img &#123; width: 100%;&#125; 网站特性网格系统 该板块当屏幕为中等尺寸时分为3列，较小屏幕是分为2列 所以使用网格系统划分 1234&lt;div class="col-sm-6 col-md-4"&gt; &lt;!-- ... --&gt;&lt;/div&gt;&lt;!-- ... --&gt; 媒体对象样式 每一个小块的样式可以通过Bootstrap中的媒体对象样式实现 1234567891011&lt;a href="#"&gt; &lt;div class="media"&gt; &lt;div class="media-left"&gt; &lt;i class="icon-uniE907"&gt;&lt;/i&gt; &lt;/div&gt; &lt;div class="media-body"&gt; &lt;h4 class="media-heading"&gt;支付交易保障&lt;/h4&gt; &lt;p&gt;银联支付全称保证支付安全&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/a&gt; 响应式辅助类型 整个板块在超小屏幕下是隐藏起来的 只需要给当前板块加上hidden-xs的class 预约投标pull-left 左边文字段落 pull-right 右边文字段落 投资产品Tab选项卡 选项卡功能可以通过Bootstrap中提供的相应组件实现http://v3.bootcss.com/javascript/#tabs 1234567891011121314151617181920&lt;div class="container"&gt; &lt;!-- 所有的选项卡标签，每个标签点击分别对应面板展示出来 --&gt; &lt;ul class="nav nav-tabs" role="tablist"&gt; &lt;!-- 下面的li定义了一个选项卡的标签，其中a标签的href属性指向的就是对应要展开的面板ID aria-controls属性是说当前a链接控制的是哪个元素（注意此属性和功能无关，只是语义） 注意一定要给a标签加上data-toggle="tab"，如果不加则boostrap无法知道这是一个选项卡标签，也就不会有相应的效果 --&gt; &lt;li role="presentation" class="active"&gt;&lt;a href="#第一个标签的ID" aria-controls="第一个标签的ID" role="tab" data-toggle="tab"&gt;标签页1&lt;/a&gt;&lt;/li&gt; &lt;li role="presentation"&gt;&lt;a href="#第二个标签的ID" aria-controls="第二个标签的ID" role="tab" data-toggle="tab"&gt;标签页2&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;!-- Tab panes --&gt; &lt;div class="tab-content"&gt; &lt;!-- .tab-pane定义当前是一个tab面板，通过id和选项卡标签关联起来 --&gt; &lt;div role="tabpanel" class="tab-pane active" id="第一个标签的ID"&gt; &lt;!-- 标签展开后的内容 --&gt; &lt;/div&gt; &lt;div role="tabpanel" class="tab-pane" id="第二个标签的ID"&gt;...&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 网格系统 和网站特色板块的网格系统定义一样 ::before ::after1234567891011121314151617181920.panel-czbk &gt; .panel-heading::before,.panel-czbk &gt; .panel-heading::after &#123; content: ' '; width: 16px; height: 16px; border-radius: 8px; background-color: #f0f0f0; position: absolute;&#125;.panel-czbk &gt; .panel-heading::before &#123; top: -8px; left: -8px;&#125;.panel-czbk &gt; .panel-heading::after &#123; bottom: -8px; left: -8px; box-shadow: 0 2px 1px #ccc inset;&#125; tooltip插件 注意，bootstrap中的tooltip插件必须通过js方式初始化 选项卡标签横向滚动 要给ul加一个容器，这个容器有横向滚动条 动态设置ul的宽度，宽度是根据内容大小决定的width= sum (li.width) 新闻资讯Tab选项卡响应式偏移合作伙伴相邻兄弟选择器登录对话框模态框表单样式导航吸顶affix组件深度自定义http://v3.bootcss.com/customize通过 Less 文件修改version 4http://www.cnblogs.com/micua/p/bootstrap-version4-alpha.html]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[markman安装须知(psd标注工具)]]></title>
      <url>%2F2017%2F03%2F11%2Fmarkman%E5%AE%89%E8%A3%85(psd%E6%A0%87%E6%B3%A8)%2F</url>
      <content type="text"><![CDATA[markman基于Adobe Air平台，所以首先安装Adobe Air平台(注意：如果提示安装失败，需要联系管理员，那么安装微软清理工具包msicuu2，卸载原有的Adobe Air，再安装自己需要的Adobe Air平台。)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[less（预处理css）（css语法的超集）]]></title>
      <url>%2F2017%2F03%2F11%2Fless%2F</url>
      <content type="text"><![CDATA[什么是 Less ？ Less 是一门 CSS 预处理语言，它扩展了 CSS 语言，增加了变量、Mixin、函数等特性，使 CSS 更易维护和扩展。 Less 可以运行在 Node或浏览器端。注意：最终还是要转为css文件。 Less 相关网站less官网less中文网less中文网 （该版本比较旧） 注释12// 转为css文件时，不被保留/* */ 转为css文件时，被保留 使用方法一：1.打开Windows PowerShell 或者cmd2.执行以下代码：-进入对应的盘区，如 E:-进入main.less文件所在的文件夹， cd ··· （如：cd E:\less）-执行以下命令 lessc main.less &gt; main.csslessc less/main.less &gt; css/main.css注意：路径有空格的话，前后一定要加双引号。 方法二：借助less官网1.在body中引入less.min.js文件，用来转换1&lt;script src=&quot;lib/less/less.min.js&quot;&gt;&lt;/script&gt; 2.在主页面中引入less文件1&lt;link rel=&quot;stylesheet/less&quot; href=&quot;less/main.less&quot;&gt; 3.直接在浏览器中查看，使用http的方式（异步请求less文件）也就是服务器环境中使用]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[js调试工具Console命令详解]]></title>
      <url>%2F2017%2F03%2F11%2Fjs%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7Console%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3%2F</url>
      <content type="text"><![CDATA[用Chrome浏览器打开：Profiles Chrome浏览器控制台的使用 (1)显示信息的命令123456789101112131415&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;常用console命令&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=&quot;text/javascript&quot;&gt;console.log(&apos;hello&apos;);console.info(&apos;信息&apos;);console.error(&apos;错误&apos;);console.warn(&apos;警告&apos;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; (2)占位符 123&lt;script type=&quot;text/javascript&quot;&gt;console.log(&quot;%d年%d月%d日&quot;,2011,3,26);&lt;/script&gt; (3)信息分组 1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;常用console命令&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=&quot;text/javascript&quot;&gt;console.group(&quot;第一组信息&quot;); console.log(&quot;第一组第一条:我的XX(http://www.jb51.net)&quot;); console.log(&quot;第一组第二条:xxx(http://jb51.net)&quot;); console.groupEnd(); console.group(&quot;第二组信息&quot;); console.log(&quot;第二组第一条:程序爱好者QQ群： 80535344&quot;); console.log(&quot;第二组第二条:欢迎你加入&quot;); console.groupEnd();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; (4)查看对象的信息 12345678&lt;script type=&quot;text/javascript&quot;&gt;var info = &#123;blog:&quot;http://www.jb51.net&quot;,QQGroup:80535344,message:&quot;程序爱好者欢迎你的加入&quot;&#125;;console.dir(info);&lt;/script&gt; (5)显示某个节点的内容 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;常用console命令&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;info&quot;&gt;&lt;h3&gt;我的博客：www.ido321.com&lt;/h3&gt;&lt;p&gt;程序爱好者:259280570,欢迎你的加入&lt;/p&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;var info = document.getElementById(&apos;info&apos;);console.dirxml(info);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; (6)判断变量是否是真 console.assert()用来判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。 123456&lt;script type=&quot;text/javascript&quot;&gt; var result = 1; console.assert( result ); var year = 2014; console.assert(year == 2018 );&lt;/script&gt; (7)追踪函数的调用轨迹。 console.trace()用来追踪函数的调用轨迹。 1234567891011&lt;script type=&quot;text/javascript&quot;&gt;/*函数是如何被调用的，在其中加入console.trace()方法就可以了*/ function add(a,b)&#123;console.trace(); return a+b; &#125; var x = add3(1,1); function add3(a,b)&#123;return add2(a,b);&#125; function add2(a,b)&#123;return add1(a,b);&#125; function add1(a,b)&#123;return add(a,b);&#125;&lt;/script&gt; (8)计时功能 console.time()和console.timeEnd()，用来显示代码的运行时间。 1234567&lt;script type=&quot;text/javascript&quot;&gt; console.time(&quot;控制台计时器一&quot;); for(var i=0;i&lt;1000;i++)&#123; for(var j=0;j&lt;1000;j++)&#123;&#125; &#125; console.timeEnd(&quot;控制台计时器一&quot;);&lt;/script&gt; (9)console.profile()的性能分析 性能分析（Profiler）就是分析程序各个部分的运行时间，找出瓶颈所在，使用的方法是console.profile()。 123456789101112131415161718192021&lt;script type=&quot;text/javascript&quot;&gt; function All()&#123;alert(11); for(var i=0;i&lt;10;i++)&#123;funcA(1000);&#125; funcB(10000); &#125; function funcA(count)&#123; for(var i=0;i&lt;count;i++)&#123;&#125; &#125; function funcB(count)&#123; for(var i=0;i&lt;count;i++)&#123;&#125; &#125; console.profile(&apos;性能分析器&apos;); All(); console.profileEnd();&lt;/script&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[GitHub以及Git]]></title>
      <url>%2F2017%2F03%2F11%2Fgithub%E4%BB%A5%E5%8F%8Agit%2F</url>
      <content type="text"><![CDATA[什么是Git？ Git源代码管理工具 版本控制工具 在一个项目中，凡是由开发系统编写的都是源代码 让源代码可以被追溯，主要记录了每次变更了什么，谁主导这次的变化体现了一种开源文化 什么是GitHub？GitHub官网 git提供商 社交化编程 便于协同合作，同步本地的代码仓库 在GitHub官网上新建一个仓库 点击New repository按钮 记录版本号commit为 7dfe51a527b885aefea55261e752827b6e4a0e84注意：给sublime text安装 Git gutter（用于提示Git变更内容） PortableGit安装、配置（Git命令行工具） 双击PortableGit.exe，解压git文件到（E:\Git） 打开系统环境变量，在用户变量中，添加GIT_HOME变量，值为解压路（E:\Git） 把E:\Git中的bin目录加入path变量里，即在path变量里加上%GIT_HOME%\bin; 测试是否配置成功，打开cmd命令行，输入git –version输出类似于git version 2.12.0.windows.1，则配置成功 SourceTreeSetup_1.4.1 git图形化界面 基于Git命令行的客户端软件 如何使用Git实现项目管理注意：不需要服务器。具体使用方法如下： 在项目文件夹下，打开命令行（shift+右键-选择在此处打开命令行） 输入命令git init 初始化一个本地仓库（在项目文件夹下，添加了一个.git文件夹，用于记录项目的所有变更信息） 查看本地仓储的状态 默认情况下，是没有跟踪文件 1git status 或者git status -s 跟踪当前目录的所有文件 1git add . 或者 git add --all 指定跟踪哪个文件 1git add + 文件名 需要指定的文件太多的时候，可以建立忽略清单（注意：最好在建立git之前，写好忽略清单，因为.gitignore只能忽略那些原来没有被追踪的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的） 1.在项目文件夹下建立一个.gitignore文件（用于说明忽略的文件有哪些）注意：用sublime text编辑器建 ​2.在.gitignore文件里，写上忽略的文件名 ​3.也可以写.js *. /dist表示根目录下的dist 取消跟踪 git rm –cached readme1.txt 删除readme1.txt的跟踪，并保留在本地。 git rm –f readme1.txt 删除readme1.txt的跟踪，并且删除本地文件。 git rm -r –cached . 删除所有跟踪文件，并保留在本地。 提交当前的变更状况到本地仓库文件夹（归档） 1git commit -m + &apos;版本说明&apos; git diff 查看变更情况 git log 查看提交日志 git reset –hard + ‘上一个版本号的前六位’ 强制将当前文件改为上一个提交的版本 如何利用GitHub把本地文件同步到远端 在GitHub网页上创建一个新的仓库 复制仓库连接 回到本地项目目录下，shift+右键，打开Git Bash 在Git Bash上，执行以下代码， 1git remote add origin + &apos;github 仓库连接&apos; 查看远端地址命令， 12git remote git remote -v git status 将本地文件上传到远端 1git push origin master master指的是master分支的意思。注意：如果本地没有README.md文件，回到是同步失败。因此，需要先使用一下命令进行代码合并 1git pull --rebase origin master 拉回远端文件在Git Bash上，执行以下代码,1git pull origin master 什么是分支？ 在项目目录下，打开命令行 查看分支 git branch 新建v2分支 git branch v2 切换到v2分支 git checkout v2 (切换前会自动回到，之前分支的最后一次的提交状态) 提交v2分支到远端 git push -u origin v2 将页面托管到GitHub上 在项目目录下打开，Git Bash git init git status git add . git status git commit -m ‘第一次提交到本地’ 在GitHub上创建一个新仓库，连接为https://github.com/mingmLiang/aboutMyselft.git 与GitHub建立连接git remote add origin https://github.com/mingmLiang/aboutMyselft.git git pull –rebase origin master 同步README.cm文件到本地 git push -u origin master git branch gh-pages 创建gh-pages分支，注意分支的名字是固定的 git checkout gh-pages 切换到gh-pages分支 git push -u origin gh-pages 将gh-pages分支同步到远端 通过链接就可以访问了 https://mingmliang.github.io/aboutMyselft/（ GitHub的用户名.github.io/项目名/ ）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[bootstrap进阶篇]]></title>
      <url>%2F2017%2F03%2F11%2Fbootstrap%E9%9A%BE%E7%82%B9%2F</url>
      <content type="text"><![CDATA[扩展按钮使用按钮生成器生成btn-itcase 123456789101112131415161718192021222324252627282930313233343536373839404142434445.btn-itcase &#123; color: #ffffff; background-color: #BD1B46; border-color: #02690C;&#125;.btn-itcase:hover,.btn-itcase:focus,.btn-itcase:active,.btn-itcase.active,.open .dropdown-toggle.btn-itcase &#123; color: #ffffff; background-color: #75334F; border-color: #02690C;&#125;.btn-itcase:active,.btn-itcase.active,.open .dropdown-toggle.btn-itcase &#123; background-image: none;&#125;.btn-itcase.disabled,.btn-itcase[disabled],fieldset[disabled] .btn-itcase,.btn-itcase.disabled:hover,.btn-itcase[disabled]:hover,fieldset[disabled] .btn-itcase:hover,.btn-itcase.disabled:focus,.btn-itcase[disabled]:focus,fieldset[disabled] .btn-itcase:focus,.btn-itcase.disabled:active,.btn-itcase[disabled]:active,fieldset[disabled] .btn-itcase:active,.btn-itcase.disabled.active,.btn-itcase[disabled].active,fieldset[disabled] .btn-itcase.active &#123; background-color: #BD1B46; border-color: #02690C;&#125;.btn-itcase .badge &#123; color: #BD1B46; background-color: #ffffff;&#125; 将代码粘贴到main.css，并且修改html文档btn-default为btn-itcase扩展导航栏在原有的bootstrap中，复制.navbar-default过来再修改成为.navbar-itcast，再在此基础上，修改样式。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100/*在原有的bootstrap中复制/*在原有的bootstrap中复制.navbar-default过来再修改成为.navbar-itcast过来再修改成为.navbar-itcast*/.navbar-itcast &#123; background-color: #fff; border-color: #f5f5f5;;&#125;.navbar-itcast .navbar-brand &#123; color: #777;&#125;.navbar-itcast .navbar-brand:hover,.navbar-itcast .navbar-brand:focus &#123; color: #5e5e5e; background-color: transparent;&#125;.navbar-itcast .navbar-text &#123; color: #777;&#125;.navbar-itcast .navbar-nav &gt; li &gt; a &#123; color: #777;&#125;.navbar-itcast .navbar-nav &gt; li &gt; a:hover,.navbar-itcast .navbar-nav &gt; li &gt; a:focus &#123; color: #333; background-color: transparent; border-bottom: #BD1B46 2px solid;&#125;.navbar-itcast .navbar-nav &gt; .active &gt; a,.navbar-itcast .navbar-nav &gt; .active &gt; a:hover,.navbar-itcast .navbar-nav &gt; .active &gt; a:focus &#123; color: #555; background-color: transparent; border-bottom: #BD1B46 2px solid;&#125;.navbar-itcast .navbar-nav &gt; .disabled &gt; a,.navbar-itcast .navbar-nav &gt; .disabled &gt; a:hover,.navbar-itcast .navbar-nav &gt; .disabled &gt; a:focus &#123; color: #ccc; background-color: transparent;&#125;.navbar-itcast .navbar-toggle &#123; border-color: #ddd;&#125;.navbar-itcast .navbar-toggle:hover,.navbar-itcast .navbar-toggle:focus &#123; background-color: #ddd;&#125;.navbar-itcast .navbar-toggle .icon-bar &#123; background-color: #888;&#125;.navbar-itcast .navbar-collapse,.navbar-itcast .navbar-form &#123; border-color: #e7e7e7;&#125;.navbar-itcast .navbar-nav &gt; .open &gt; a,.navbar-itcast .navbar-nav &gt; .open &gt; a:hover,.navbar-itcast .navbar-nav &gt; .open &gt; a:focus &#123; color: #555; background-color: #e7e7e7;&#125;@media (max-width: 767px) &#123; .navbar-itcast .navbar-nav .open .dropdown-menu &gt; li &gt; a &#123; color: #777; &#125; .navbar-itcast .navbar-nav .open .dropdown-menu &gt; li &gt; a:hover, .navbar-itcast .navbar-nav .open .dropdown-menu &gt; li &gt; a:focus &#123; color: #333; background-color: transparent; &#125; .navbar-itcast .navbar-nav .open .dropdown-menu &gt; .active &gt; a, .navbar-itcast .navbar-nav .open .dropdown-menu &gt; .active &gt; a:hover, .navbar-itcast .navbar-nav .open .dropdown-menu &gt; .active &gt; a:focus &#123; color: #555; background-color: #e7e7e7; &#125; .navbar-itcast .navbar-nav .open .dropdown-menu &gt; .disabled &gt; a, .navbar-itcast .navbar-nav .open .dropdown-menu &gt; .disabled &gt; a:hover, .navbar-itcast .navbar-nav .open .dropdown-menu &gt; .disabled &gt; a:focus &#123; color: #ccc; background-color: transparent; &#125;&#125;.navbar-itcast .navbar-link &#123; color: #777;&#125;.navbar-itcast .navbar-link:hover &#123; color: #333;&#125;.navbar-itcast .btn-link &#123; color: #777;&#125;.navbar-itcast .btn-link:hover,.navbar-itcast .btn-link:focus &#123; color: #333;&#125;.navbar-itcast .btn-link[disabled]:hover,fieldset[disabled] .navbar-itcast .btn-link:hover,.navbar-itcast .btn-link[disabled]:focus,fieldset[disabled] .navbar-itcast .btn-link:focus &#123; color: #ccc;&#125; 汉堡菜单在bootstrap中复制汉堡菜单代码12345678910&lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot;&gt; &lt;!--屏幕阅读器专用类名：sr-only，用户不可见--&gt; &lt;span class=&quot;sr-only&quot;&gt;切换菜单&lt;/span&gt; &lt;!--icon-bar汉堡菜单中的是三个杠--&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;/button&gt; 在navbar-itcast….中修改样式用一下标签包裹需要隐藏、显示的代码1&lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt; 注意：以下更加实用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748 &lt;nav class=&quot;navbar navbar-itcast navbar-static-top&quot; role=&quot;navigation&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;navbar-header&quot;&gt; &lt;!--class=&quot;navbar-toggle collapsed&quot;声明该按钮是一个切换菜单--&gt; &lt;!--data-target说明切换的数据的位置--&gt; &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#nav_list&quot;&gt; &lt;!--屏幕阅读器专用类名：sr-only，用户不可见--&gt; &lt;span class=&quot;sr-only&quot;&gt;切换菜单&lt;/span&gt; &lt;!--icon-bar汉堡菜单中的是三个杠--&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt; &lt;i class=&quot;icon-icon&quot;&gt;&lt;/i&gt; &lt;i class=&quot;icon-logo&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;nav_list&quot;&gt; &lt;ul class=&quot;nav navbar-nav&quot;&gt; &lt;li class=&quot;active&quot;&gt; &lt;a href=&quot;#&quot;&gt;我要投资&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;我要借款&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;平台介绍&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;新手专区&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;最新动态&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;微论坛&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul class=&quot;nav navbar-nav navbar-right&quot;&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;个人中心&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/nav&gt; 隐藏、显示12&lt;div class=&quot;topBar hidden-sm hidden-xs&quot;&gt;&lt;div class=&quot;topBar visible-md visible-lg&quot;&gt; 浏览器编辑代码同步技巧1.打开开发者选项2.点击Sources3.在左侧栏空白处右键，选择add folder to workspace4.选择与之对应的本地文件5.打开本地网页和网络网页后，选择与之对应的本地网页的当前页面右键点击6.选择Map。。。。（记得允许）7.在浏览器修改即可，就会自动保存到本地文件中 bootstrp自定义方法一：（1）在bootcss中下载，Bootstrap 源码（2）打开less文件夹，修改variables.less，修改相应变量（3）利用修改后的less，生成css文件(注意：编译bootstrap.less)lessc bootstrap.less &gt; bootstrap.css 方法二：（1）进入官网- 定制（2）进行修改（3）修改完之后，最底下有“编译并下载”按钮。 rem和em（可以用来做动态适配）(1)em指的是父级元素的一个font-size(2)rem指的是根元素html的一个font-size]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[bootstrap基础篇]]></title>
      <url>%2F2017%2F03%2F11%2FbootStrap%E7%AE%80%E5%8D%95%2F</url>
      <content type="text"><![CDATA[什么是响应式 传统方式：用不同设备开发不同版本。 响应式设计：使用同一套网页为不同的设备进行适配。 bootStrap一个流行的基于html、css、js（jQuery）的响应式框架 bootStrap的使用 bootStrap下载(学习文档) 进入bootStrap中文网 点击bootStrap3中文文档 点击下载bootStrap 下载用于生产环境的 Bootstrap（用于简单的设计、开发） 注意：也可以使用 Bootstrap 中文网提供的免费 CDN 加速服务1234567891011&lt;!-- 新 Bootstrap 核心 CSS 文件 --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css&quot;&gt;&lt;!-- 可选的Bootstrap主题文件（一般不用引入） --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap-theme.min.css&quot;&gt;&lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入 --&gt;&lt;script src=&quot;http://cdn.bootcss.com/jquery/1.11.1/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;&lt;script src=&quot;http://cdn.bootcss.com/bootstrap/3.3.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt; 12345678910111213141516171819202122为了确保适当的绘制和触屏缩放，需要在 &lt;head&gt; 之中添加 viewport 元数据标签。快捷方式： meta:vp &lt;!--viewport表示视口，根据设备宽度，调整视口缩放比例--&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; user-scalable=no不允许用户缩放 &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1,user-scalable=no&quot;&gt; initial-scale初始化缩放 user-scalable=no是否允许用户缩放 minimum-scale:最小缩放 maximum-scale:最大缩放 *************注意： 条件注释：当判断条件满足时，就会执行注释中的html代码；不满足时，就会当做注释忽略掉。 &lt;!--[if lt IE 9]&gt; //让浏览器可以识别html5的新标签 &lt;script src=&quot;http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js&quot;&gt;&lt;/script&gt; //让低版本浏览器可以使用css3的媒体查询 &lt;script src=&quot;http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt; &lt;![endif]--&gt; 基本bootStrap环境搭建好之后，的代码123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;index-响应式&lt;/title&gt; &lt;!--为了确保适当的绘制和触屏缩放，需要在 &lt;head&gt; 之中添加 viewport 元数据标签。--&gt; &lt;!--viewport表示视口，根据设备宽度，调整视口缩放比例--&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;!--引入bootStrap的css--&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/bootstrap.min.css&quot; type=&quot;text/css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/bootstrap-theme.min.css&quot; type=&quot;text/css&quot;&gt; &lt;!--引入js--&gt; &lt;script src=&quot;./js/jquery-3.1.0.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./js/bootstrap.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; bootStrap的入门（全局css）布局容器123456789(1).container 类用于固定宽度并支持响应式布局的容器。 &lt;div class=&quot;container&quot;&gt; ... &lt;/div&gt;(2).container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器。 &lt;div class=&quot;container-fluid&quot;&gt; ... &lt;/div&gt; 栅格系统Bootstrap 提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。它包含了易于使用的预定义类，还有强大的mixin 用于生成更具语义的布局。栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。 “行（row）”必须包含在 .container （固定宽度）或 .container-fluid （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。通过“行（row）”在水平方向创建一组“列（column）”。你的内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。类似 .row 和 .col-xs-4 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。通过为“列（column）”设置 padding 属性，从而创建列与列之间的间隔（gutter）。通过为 .row 元素设置负值 margin 从而抵消掉为 .container 元素设置的 padding，也就间接为“行（row）”所包含的“列（column）”抵消掉了padding。如果一“行（row）”中包含了的“列（column）”大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列。 组件 进入http://www.bootcss.com 进入bootStrap3组件 实战栅格系统123456789101112131415&lt;!--栅格系统--&gt; &lt;!--注意：row代表现实为一行的内容--&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-md-4&quot;&gt; &lt;img src=&quot;images/logo.png&quot; alt=&quot;logo&quot;&gt; &lt;/div&gt; &lt;div class=&quot;col-md-4&quot;&gt; &lt;img src=&quot;images/logo.png&quot; alt=&quot;logo&quot;&gt; &lt;/div&gt; &lt;div class=&quot;col-md-4&quot;&gt; &lt;a href=&quot;&quot;&gt;登录&lt;/a&gt; &lt;a href=&quot;&quot;&gt;注册&lt;/a&gt; &lt;a href=&quot;&quot;&gt;购物车&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; 简单响应式原理实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;导航条&lt;/title&gt; &lt;!--为了确保适当的绘制和触屏缩放，需要在 &lt;head&gt; 之中添加 viewport 元数据标签。--&gt; &lt;!--viewport表示视口，根据设备宽度，调整视口缩放比例--&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;!--引入bootStrap的css--&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/bootstrap.min.css&quot; type=&quot;text/css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/bootstrap-theme.min.css&quot; type=&quot;text/css&quot;&gt; &lt;!--引入自定义的css文件--&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/main.css&quot; type=&quot;text/css&quot;&gt; &lt;!--引入js--&gt; &lt;script src=&quot;./js/jquery-3.1.0.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./js/bootstrap.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;container&quot;&gt; &lt;!--栅格系统--&gt; &lt;!--注意：row代表现实为一行的内容--&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-md-4&quot;&gt; &lt;img src=&quot;images/logo.png&quot; alt=&quot;logo&quot;&gt; &lt;/div&gt; &lt;div class=&quot;col-md-4&quot;&gt; &lt;img src=&quot;images/logo.png&quot; alt=&quot;logo&quot;&gt; &lt;/div&gt; &lt;div class=&quot;col-md-4&quot;&gt; &lt;a href=&quot;&quot;&gt;登录&lt;/a&gt; &lt;a href=&quot;&quot;&gt;注册&lt;/a&gt; &lt;a href=&quot;&quot;&gt;购物车&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;nav&gt; &lt;!--navbar-inverse反色导航条--&gt; &lt;nav class=&quot;navbar navbar-inverse row&quot; role=&quot;navigation&quot;&gt; &lt;div class=&quot;container-fluid&quot;&gt; &lt;!-- Brand and toggle get grouped for better mobile display --&gt; &lt;div class=&quot;navbar-header&quot;&gt; &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot;&gt; &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Brand&lt;/a&gt; &lt;/div&gt; &lt;!-- Collect the nav links, forms, and other content for toggling --&gt; &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt; &lt;ul class=&quot;nav navbar-nav&quot;&gt; &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;dropdown&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class=&quot;dropdown-menu&quot; role=&quot;menu&quot;&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;form class=&quot;navbar-form navbar-right&quot; role=&quot;search&quot;&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt; &lt;/div&gt; &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt; &lt;/form&gt; &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt; &lt;/div&gt;&lt;!-- /.container-fluid --&gt; &lt;/nav&gt; &lt;/nav&gt; &lt;div class=&quot;row&quot;&gt; &lt;div id=&quot;carousel-example-generic&quot; class=&quot;carousel slide&quot; data-ride=&quot;carousel&quot;&gt; &lt;!-- Indicators --&gt; &lt;ol class=&quot;carousel-indicators&quot;&gt; &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;0&quot; class=&quot;active&quot;&gt;&lt;/li&gt; &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;1&quot;&gt;&lt;/li&gt; &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;2&quot;&gt;&lt;/li&gt; &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;3&quot;&gt;&lt;/li&gt; &lt;/ol&gt; &lt;!-- Wrapper for slides --&gt; &lt;div class=&quot;carousel-inner&quot; role=&quot;listbox&quot;&gt; &lt;div class=&quot;item active&quot;&gt; &lt;img src=&quot;http://img.mukewang.com/53ad2498000174af13660768.jpg&quot; &gt; &lt;div class=&quot;carousel-caption&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;item&quot;&gt; &lt;img src=&quot;http://img.mukewang.com/53ad25df0001300613660768.jpg&quot; &gt; &lt;div class=&quot;carousel-caption&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;item&quot;&gt; &lt;img src=&quot;http://img.mukewang.com/53ad26170001a86013660768.jpg&quot; &gt; &lt;div class=&quot;carousel-caption&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;item&quot;&gt; &lt;img src=&quot;http://img.mukewang.com/53ad2498000174af13660768.jpg&quot; &gt; &lt;div class=&quot;carousel-caption&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- Controls --&gt; &lt;a class=&quot;left carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;prev&quot;&gt; &lt;span class=&quot;glyphicon glyphicon-chevron-left&quot;&gt;&lt;/span&gt; &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;/span&gt; &lt;/a&gt; &lt;a class=&quot;right carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;next&quot;&gt; &lt;span class=&quot;glyphicon glyphicon-chevron-right&quot;&gt;&lt;/span&gt; &lt;span class=&quot;sr-only&quot;&gt;Next&lt;/span&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div class=&quot;row&quot;&gt; &lt;h1&gt;最新商品 &lt;img src=&quot;images/lasted.jpg&quot;&gt;&lt;/h1&gt; &lt;/div&gt; &lt;div class=&quot;row&quot;&gt; &lt;!--栅格系统，一共12=10+2--&gt; &lt;div class=&quot;col-md-2&quot;&gt; &lt;img src=&quot;images/1.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-10&quot;&gt; &lt;!--栅格系统，一共12=6+2+2+2一行--&gt; &lt;div class=&quot;col-md-6&quot;&gt; &lt;img src=&quot;images/2.jpg&quot; &gt; &lt;/div&gt; &lt;!--实现响应式col-md-2 col-sm-4--&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/4.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/4.jpg&quot; &gt; &lt;/div&gt;&lt;div class=&quot;col-md-2&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; &gt; &lt;/div&gt; &lt;div class=&quot;col-md-2 col-sm-4&quot;&gt; &lt;img src=&quot;images/4.jpg&quot; &gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--实现响应式，hidden-xs小屏幕上隐藏--&gt; &lt;div class=&quot;hidden-xs&quot;&gt; &lt;img src=&quot;images/5.jpg&quot;&gt; &lt;/div&gt; &lt;div class=&quot;visible-lg-block&quot;&gt; &lt;img src=&quot;images/5.jpg&quot; id=&quot;name1&quot;&gt; &lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;footer&gt; &lt;!--版权信息--&gt; &lt;!--注意：居中显示--&gt; &lt;center&gt; 后发生的咖啡机阿斯顿福建爱上课地点积分ids &lt;/center&gt; &lt;/footer&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[ajax基础（js篇）]]></title>
      <url>%2F2017%2F03%2F11%2Fajax%2F</url>
      <content type="text"><![CDATA[​ AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。​ AJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。AJAX 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。 ​ 有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。​ 在 2005 年，Google 通过其 Google Suggest 使 AJAX 变得流行起来。Google Suggest 使用 AJAX 创造出动态性极强的 web 界面：当您在谷歌的搜索框输入关键字时，JavaScript 会把这些字符发送到服务器，然后服务器会返回一个搜索建议的列表 AJAX - 创建 XMLHttpRequest 对象123456789var xmlhttp;if (window.XMLHttpRequest) &#123;// code for IE7+, Firefox, Chrome, Opera, Safari xmlhttp=new XMLHttpRequest(); &#125;else &#123;// code for IE6, IE5 xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;); &#125; AJAX - 向服务器发送请求如需将请求发送到服务器，我们使用 XMLHttpRequest 对象的 open() 和 send() 方法：12xmlhttp.open(&quot;GET&quot;,&quot;test1.txt&quot;,true);xmlhttp.send(); 方法 描述 open(method,url,async) 规定请求的类型、URL 以及是否异步处理请求。 method：请求的类型；GET 或 POST url：文件在服务器上的位置 async：true（异步）或 false（同步） send(string) 将请求发送到服务器。 string：仅用于 POST 请求 AJAX - 服务器响应 属性 描述 responseText 获得字符串形式的响应数据。 responseXML 获得 XML 形式的响应数据。 responseText 属性返回字符串形式的响应，因此您可以这样使用：1document.getElementById(&amp;quot;myDiv&amp;quot;).innerHTML=xmlhttp.responseTex; 如果来自服务器的响应是 XML，而且需要作为 XML 对象进行解析，请使用 responseXML 属性：12345678xmlDoc=xmlhttp.responseXML; txt=&quot;&quot;; x=xmlDoc.getElementsByTagName(&quot;ARTIST&quot;); for (i=0;i&lt;x.length;i++) &#123; txt=txt + x[i].childNodes[0].nodeValue + &quot;&lt;br /&gt;&quot;; &#125; document.getElementById(&quot;myDiv&quot;).innerHTML=txt; AJAX - onreadystatechange 事件当请求被发送到服务器时，我们需要执行一些基于响应的任务。每当 readyState 改变时，就会触发 onreadystatechange 事件。readyState 属性存有 XMLHttpRequest 的状态信息。 属性 描述 onreadystatechange 存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。 readyState 存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。 0: 请求未初始化 1: 服务器连接已建立 2: 请求已接收 3: 请求处理中 4: 请求已完成，且响应已就绪 status 200: “OK” 404: 未找到页面 503：服务器端出错 在 onreadystatechange 事件中，我们规定当服务器响应已做好被处理的准备时所执行的任务。当 readyState 等于 4 且状态为 200 时，表示响应已就绪：1234567xmlhttp.onreadystatechange=function() &#123; if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200) &#123; document.getElementById(&quot;myDiv&quot;).innerHTML=xmlhttp.responseText; &#125; &#125;]]></content>
    </entry>

    
  
  
</search>
